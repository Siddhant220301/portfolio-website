{"version":3,"file":"static/js/891.4324ea94.chunk.js","mappings":"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","sources":["components/GlitchText.js","components/DecryptedText.js","components/SkillBar.js","components/SkillTooltip.js","pages/About.js"],"sourcesContent":["// src/components/GlitchText.js\r\nimport React from 'react';\r\nimport './GlitchText.css';\r\n\r\nconst GlitchText = ({ text }) => {\r\n  return (\r\n    <h1 className=\"glitch-text\" data-text={text}>\r\n      {text}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default GlitchText;","// src/components/DecryptedText.js\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { motion } from 'framer-motion'; // Correct import from framer-motion\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    display: 'inline-block',\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n  srOnly: {\r\n    position: 'absolute',\r\n    width: '1px',\r\n    height: '1px',\r\n    padding: 0,\r\n    margin: '-1px',\r\n    overflow: 'hidden',\r\n    clip: 'rect(0,0,0,0)',\r\n    border: 0,\r\n  },\r\n};\r\n\r\nexport default function DecryptedText({\r\n  text,\r\n  speed = 50,\r\n  maxIterations = 10,\r\n  sequential = false,\r\n  revealDirection = 'start',\r\n  useOriginalCharsOnly = false,\r\n  characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!@#$%^&*()_+',\r\n  className = '',\r\n  parentClassName = '',\r\n  encryptedClassName = '',\r\n  animateOn = 'hover',\r\n  ...props\r\n}) {\r\n  const [displayText, setDisplayText] = useState(text);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n  const [isScrambling, setIsScrambling] = useState(false);\r\n  const [revealedIndices, setRevealedIndices] = useState(new Set());\r\n  const [hasAnimated, setHasAnimated] = useState(false);\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    let currentIteration = 0;\r\n\r\n    const getNextIndex = (revealedSet) => {\r\n      const textLength = text.length;\r\n      switch (revealDirection) {\r\n        case 'start': return revealedSet.size;\r\n        case 'end': return textLength - 1 - revealedSet.size;\r\n        case 'center': {\r\n          const middle = Math.floor(textLength / 2);\r\n          const offset = Math.floor(revealedSet.size / 2);\r\n          const nextIndex = revealedSet.size % 2 === 0 ? middle + offset : middle - offset - 1;\r\n          if (nextIndex >= 0 && nextIndex < textLength && !revealedSet.has(nextIndex)) return nextIndex;\r\n          for (let i = 0; i < textLength; i++) { if (!revealedSet.has(i)) return i; }\r\n          return 0;\r\n        }\r\n        default: return revealedSet.size;\r\n      }\r\n    };\r\n\r\n    const availableChars = useOriginalCharsOnly ? Array.from(new Set(text.split(''))).filter((char) => char !== ' ') : characters.split('');\r\n\r\n    const shuffleText = (originalText, currentRevealed) => {\r\n      return originalText.split('').map((char, i) => {\r\n        if (char === ' ') return ' ';\r\n        if (currentRevealed.has(i)) return originalText[i];\r\n        return availableChars[Math.floor(Math.random() * availableChars.length)];\r\n      }).join('');\r\n    };\r\n\r\n    if (isHovering) {\r\n      setIsScrambling(true);\r\n      interval = setInterval(() => {\r\n        setRevealedIndices((prevRevealed) => {\r\n          if (sequential) {\r\n            if (prevRevealed.size < text.length) {\r\n              const nextIndex = getNextIndex(prevRevealed);\r\n              const newRevealed = new Set(prevRevealed);\r\n              newRevealed.add(nextIndex);\r\n              setDisplayText(shuffleText(text, newRevealed));\r\n              return newRevealed;\r\n            } else {\r\n              clearInterval(interval);\r\n              setIsScrambling(false);\r\n              return prevRevealed;\r\n            }\r\n          } else {\r\n            setDisplayText(shuffleText(text, prevRevealed));\r\n            currentIteration++;\r\n            if (currentIteration >= maxIterations) {\r\n              clearInterval(interval);\r\n              setIsScrambling(false);\r\n              setDisplayText(text);\r\n            }\r\n            return prevRevealed;\r\n          }\r\n        });\r\n      }, speed);\r\n    } else {\r\n      setDisplayText(text);\r\n      setRevealedIndices(new Set());\r\n      setIsScrambling(false);\r\n    }\r\n\r\n    return () => { if (interval) clearInterval(interval); };\r\n  }, [isHovering, text, speed, maxIterations, sequential, revealDirection, characters, useOriginalCharsOnly]);\r\n\r\n  useEffect(() => {\r\n    if (animateOn !== 'view') return;\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting && !hasAnimated) {\r\n          setIsHovering(true);\r\n          setHasAnimated(true);\r\n        }\r\n      });\r\n    }, { threshold: 0.1 });\r\n    const currentRef = containerRef.current;\r\n    if (currentRef) observer.observe(currentRef);\r\n    return () => { if (currentRef) observer.unobserve(currentRef); };\r\n  }, [animateOn, hasAnimated]);\r\n\r\n  const hoverProps = animateOn === 'hover' ? { onMouseEnter: () => setIsHovering(true), onMouseLeave: () => setIsHovering(false) } : {};\r\n\r\n  return (\r\n    <motion.span className={parentClassName} ref={containerRef} style={styles.wrapper} {...hoverProps} {...props}>\r\n      <span style={styles.srOnly}>{displayText}</span>\r\n      <span aria-hidden=\"true\">\r\n        {displayText.split('').map((char, index) => {\r\n          const isRevealedOrDone = revealedIndices.has(index) || !isScrambling || !isHovering;\r\n          return <span key={index} className={isRevealedOrDone ? className : encryptedClassName}>{char}</span>;\r\n        })}\r\n      </span>\r\n    </motion.span>\r\n  );\r\n}","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport './SkillBar.css';\r\n\r\nconst SkillBar = ({ skill, percentage, onMouseEnter, onMouseLeave }) => {\r\n  const barVariants = {\r\n    initial: { width: 0 },\r\n    animate: {\r\n      width: `${percentage}%`,\r\n      transition: {\r\n        duration: 1.5,\r\n        ease: [0.25, 1, 0.5, 1]\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"skill-bar-wrapper\"\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n    >\r\n      <div className=\"skill-info\">\r\n        <span className=\"skill-name\">{skill}</span>\r\n        <span className=\"skill-percentage\">{percentage}%</span>\r\n      </div>\r\n      <div className=\"skill-bar-track\">\r\n        <motion.div\r\n          className=\"skill-bar-fill\"\r\n          variants={barVariants}\r\n          initial=\"initial\"\r\n          whileInView=\"animate\"\r\n          viewport={{ once: true, amount: 0.8 }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkillBar;","import React from 'react';\r\nimport ReactDOM from 'react-dom'; // Import ReactDOM for Portals\r\nimport { motion } from 'framer-motion';\r\nimport './SkillTooltip.css';\r\n\r\nconst SkillTooltip = ({ details, position }) => {\r\n  if (!details) return null;\r\n\r\n  // The JSX for the tooltip\r\n  const tooltipContent = (\r\n    <motion.div\r\n      className=\"skill-tooltip\"\r\n      initial={{ opacity: 0, scale: 0.9 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      exit={{ opacity: 0, scale: 0.9 }}\r\n      style={{\r\n        top: position.y,\r\n        left: position.x,\r\n      }}\r\n      transition={{ type: 'spring', damping: 25, stiffness: 300 }}\r\n    >\r\n      <p>{details}</p>\r\n    </motion.div>\r\n  );\r\n\r\n  // Use a Portal to render the tooltip content into the 'tooltip-root' div\r\n  return ReactDOM.createPortal(tooltipContent, document.getElementById('tooltip-root'));\r\n};\r\n\r\nexport default SkillTooltip;","import React, { useState, useEffect } from 'react';\r\nimport './About.css';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport SkillBar from '../components/SkillBar';\r\nimport GlitchText from '../components/GlitchText';\r\nimport DecryptedText from '../components/DecryptedText';\r\nimport SkillTooltip from '../components/SkillTooltip';\r\n\r\nconst technicalSkills = [\r\n  { name: \"SQL\", percentage: 90, details: \"Proficient in writing complex queries for data extraction, manipulation, and analysis across various database systems.\" },\r\n  { name: \"Python\", percentage: 80, details: \"Using Python with libraries like Pandas and NumPy for data analysis, scripting, and automation tasks.\" },\r\n  { name: \"Excel / Google Sheets\", percentage: 85, details: \"Advanced proficiency in creating complex spreadsheets, pivot tables, and data visualizations.\" },\r\n  { name: \"Power BI / Metabase\", percentage: 88, details: \"Skilled in developing interactive dashboards and reports to translate data into actionable business insights.\" },\r\n  { name: \"Jira\", percentage: 95, details: \"Experienced in using Jira for agile project management, task coordination, and product testing cycles.\" },\r\n];\r\n\r\nconst softSkills = [\r\n  { name: \"Management Skills\", percentage: 95, details: \"Adept at project planning, resource allocation, and team coordination to meet strategic objectives.\" },\r\n  { name: \"Creativity\", percentage: 90, details: \"Applying innovative thinking to solve problems and develop unique marketing and business strategies.\" },\r\n  { name: \"Critical Thinking\", percentage: 85, details: \"Strong ability to analyze complex situations, evaluate information, and make logical, data-driven decisions.\" },\r\n  { name: \"Leadership\", percentage: 92, details: \"Proven experience in guiding teams, providing mentorship, and leading employee training initiatives.\" },\r\n  { name: \"Team Management\", percentage: 90, details: \"Fostering a collaborative environment to enhance team growth, productivity, and project success.\" },\r\n];\r\n\r\nfunction About() {\r\n  const [hoveredSkill, setHoveredSkill] = useState(null);\r\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    const handleMouseMove = (e) => {\r\n      setTooltipPosition({ x: e.clientX, y: e.clientY });\r\n    };\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    return () => window.removeEventListener('mousemove', handleMouseMove);\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div \r\n      className=\"about-container\"\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <GlitchText text=\"About Me\" />\r\n      <p>\r\n        As an MBA student with a B.Tech (CSE) background, I aim to blend\r\n        technical expertise with business acumen to drive innovation, streamline\r\n        operations, and improve user experiences. My foundation in\r\n        programming and analytical thinking, combined with my MBA education,\r\n        positions me to excel in strategic, data-driven leadership roles.\r\n      </p>\r\n\r\n      <div className=\"skills-grid\">\r\n        <div className=\"skills-column\">\r\n          <DecryptedText text=\"Technical Skills\" animateOn=\"view\" sequential parentClassName=\"section-title\" />\r\n          {technicalSkills.map((skill) => (\r\n            <SkillBar \r\n              key={skill.name} \r\n              skill={skill.name} \r\n              percentage={skill.percentage}\r\n              onMouseEnter={() => setHoveredSkill(skill)}\r\n              onMouseLeave={() => setHoveredSkill(null)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"skills-column\">\r\n          <DecryptedText text=\"Soft Skills\" animateOn=\"view\" sequential parentClassName=\"section-title\" />\r\n          {softSkills.map((skill) => (\r\n            <SkillBar \r\n              key={skill.name} \r\n              skill={skill.name} \r\n              percentage={skill.percentage}\r\n              onMouseEnter={() => setHoveredSkill(skill)}\r\n              onMouseLeave={() => setHoveredSkill(null)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <AnimatePresence>\r\n        {hoveredSkill && (\r\n          <SkillTooltip \r\n            details={hoveredSkill.details} \r\n            position={tooltipPosition}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default About;"],"names":["_ref","text","_jsx","className","children","styles","wrapper","display","whiteSpace","srOnly","position","width","height","padding","margin","overflow","clip","border","DecryptedText","speed","maxIterations","sequential","revealDirection","useOriginalCharsOnly","characters","parentClassName","encryptedClassName","animateOn","props","_objectWithoutProperties","_excluded","displayText","setDisplayText","useState","isHovering","setIsHovering","isScrambling","setIsScrambling","revealedIndices","setRevealedIndices","Set","hasAnimated","setHasAnimated","containerRef","useRef","useEffect","interval","currentIteration","availableChars","Array","from","split","filter","char","shuffleText","originalText","currentRevealed","map","i","has","Math","floor","random","length","join","setInterval","prevRevealed","size","nextIndex","revealedSet","textLength","middle","offset","getNextIndex","newRevealed","add","clearInterval","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","threshold","currentRef","current","observe","unobserve","hoverProps","onMouseEnter","onMouseLeave","_jsxs","motion","span","_objectSpread","ref","style","index","isRevealedOrDone","skill","percentage","barVariants","initial","animate","concat","transition","duration","ease","div","variants","whileInView","viewport","once","amount","details","tooltipContent","opacity","scale","exit","top","y","left","x","type","damping","stiffness","ReactDOM","document","getElementById","technicalSkills","name","softSkills","hoveredSkill","setHoveredSkill","tooltipPosition","setTooltipPosition","handleMouseMove","e","clientX","clientY","window","addEventListener","removeEventListener","GlitchText","SkillBar","AnimatePresence","SkillTooltip"],"sourceRoot":""}